{"version":3,"file":"static/js/803.2c84e8d5.chunk.js","mappings":"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","sources":["components/Form/Form.styled.js","components/Form/Form.jsx","components/FindContacts/FindContacts.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","Pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { styled } from 'styled-components';\nimport { ErrorMessage, Form, Field } from 'formik';\nexport const Error = styled(ErrorMessage)`\n  font-size: 16px;\n  color: red;\n`;\nexport const FormEl = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  align-items: flex-start;\n`;\nexport const Button = styled.button`\n  padding: 8px;\n  display: block;\n  background-color: #fff;\n  border: 2px solid blueviolet;\n  border-radius: 8px;\n`;\nexport const Input = styled(Field)`\n  margin-left: 8px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Button, Error, FormEl, Input, Label } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from 'notiflix';\nimport { addContacts } from 'components/redux/operations';\nimport { selectContacts } from 'components/redux/contactSlice';\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  number: Yup.string()\n    .min(7, 'Must be min 7 numbers!')\n    .max(15, 'Must be max 15 numbers!!')\n    .required('Required'),\n});\n\nexport const FormPhoneBook = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const onSubmit = ({ name, number }) => {\n    if (contacts.find(contact => contact.number === number)) {\n      Notify.failure(`${number} is alredy in contacts`);\n      return;\n    }\n    const newContact = { name, number };\n    dispatch(addContacts(newContact));\n  };\n  return (\n    <div>\n      <Formik\n        initialValues={{ name: '', number: '' }}\n        onSubmit={(values, actions) => {\n          onSubmit(values);\n          actions.resetForm();\n        }}\n        validationSchema={SignupSchema}\n      >\n        <FormEl>\n          <Label>\n            Name\n            <Input name=\"name\" type=\"text\" />\n            <Error name=\"name\" component=\"span\" />\n          </Label>\n          <Label>\n            Number\n            <Input name=\"number\" type=\"tel\" />\n            <Error name=\"number\" component=\"span\" />\n          </Label>\n\n          <Button type=\"submit\">add contact</Button>\n        </FormEl>\n      </Formik>\n    </div>\n  );\n};\n","import { filterStatus } from 'components/redux/filterSlice';\nimport { useDispatch } from 'react-redux';\n\nexport const FindContacts = () => {\n  const dispatch = useDispatch();\n  const onFindUser = ({ target: { value } }) => {\n    dispatch(filterStatus(value));\n  };\n  return (\n    <div>\n      <p>find contacts by name</p>\n      <input onChange={onFindUser} name=\"findName\" type=\"text\" />\n    </div>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const List = styled.ol`\n  margin-top: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\nexport const Li = styled.li`\n  display: flex;\n  gap: 12px;\n  flex-wrap: nowrap;\n`;\nexport const P = styled.p`\n  font-size: 20px;\n`;\nexport const Button = styled.button`\n  padding: 4px;\n  display: block;\n  background-color: #fff;\n  border: 2px solid blueviolet;\n  border-radius: 8px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Button, Li, List, P } from './ContactsList.styled';\nimport { deleteContacts, fetchContacts } from 'components/redux/operations';\nimport { filterNumbers } from 'components/redux/filterSlice';\nimport { useEffect } from 'react';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const visibleNumbers = useSelector(filterNumbers);\n  const onDelete = delEl => {\n    dispatch(deleteContacts(delEl));\n  };\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div>\n      <List>\n        {visibleNumbers.map(user => (\n          <Li key={user.id}>\n            <P>{user.name}:</P>\n            <P>{user.number}</P>\n            <Button onClick={() => onDelete(user.id)} type=\"button\">\n              delete\n            </Button>\n          </Li>\n        ))}\n      </List>\n    </div>\n  );\n};\n","import { selectError, selectIsLoading } from 'components/redux/contactSlice';\nimport { useSelector } from 'react-redux';\nimport { FormPhoneBook } from 'components/Form/Form';\nimport { FindContacts } from 'components/FindContacts/FindContacts';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <FormPhoneBook />\n      <h2>Contacts</h2>\n      {isLoading && !error && <div>Request in progress...</div>}\n      <FindContacts />\n      <ContactsList />\n    </div>\n  );\n};\nexport default ContactsPage;\n"],"names":["Error","styled","ErrorMessage","_templateObject","_taggedTemplateLiteral","FormEl","Form","_templateObject2","Button","_templateObject3","Input","Field","_templateObject4","Label","_templateObject5","SignupSchema","Yup","shape","name","min","max","required","number","FormPhoneBook","contacts","useSelector","selectContacts","dispatch","useDispatch","_jsx","children","Formik","initialValues","onSubmit","values","actions","_ref","find","contact","Notify","concat","newContact","addContacts","resetForm","validationSchema","_jsxs","type","component","FindContacts","onChange","value","target","filterStatus","List","Li","P","ContactsList","visibleNumbers","filterNumbers","useEffect","fetchContacts","map","user","onClick","delEl","id","deleteContacts","isLoading","selectIsLoading","error","selectError"],"sourceRoot":""}