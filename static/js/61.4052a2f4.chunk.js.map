{"version":3,"file":"static/js/61.4052a2f4.chunk.js","mappings":"+NAE2BA,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0G,YCAjBF,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yFAMXF,EAAAA,GAAAA,GAASG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,gEAKVF,EAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8BAGHF,EAAAA,GAAAA,OAAaK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,iI,8CCddF,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAoBC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8CAInBF,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAYG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,gGAMZF,EAAAA,GAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kIAOdF,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAaK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,+BAGbF,EAAAA,GAAAA,MAAYS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,2E,gBCHjC,GCXqBQ,EAAAA,KAAaC,MAAM,CACtCC,KAAMF,EAAAA,KACHG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZC,OAAQN,EAAAA,KACLG,IAAI,EAAG,0BACPC,IAAI,GAAI,4BACRC,SAAS,cDTO,YACDE,EAAAA,EAAAA,IAAYC,EAAAA,KAChBD,EAAAA,EAAAA,IAAYE,EAAAA,GAS5B,E","sources":["components/App/App.styled.js","components/ContactsList/ContactsList.styled.js","components/Form/Form.styled.js","Pages/Contacts/Contacts.jsx","components/Form/Form.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const PageWrapper = styled.div`\n  padding: 24px 15px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n","import { styled } from 'styled-components';\n\nexport const List = styled.ol`\n  margin-top: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\nexport const Li = styled.li`\n  display: flex;\n  gap: 12px;\n  flex-wrap: nowrap;\n`;\nexport const P = styled.p`\n  font-size: 20px;\n`;\nexport const Button = styled.button`\n  padding: 4px;\n  display: block;\n  background-color: #fff;\n  border: 2px solid blueviolet;\n  border-radius: 8px;\n`;\n","import { styled } from 'styled-components';\nimport { ErrorMessage, Form, Field } from 'formik';\nexport const Error = styled(ErrorMessage)`\n  font-size: 16px;\n  color: red;\n`;\nexport const FormEl = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  align-items: flex-start;\n`;\nexport const Button = styled.button`\n  padding: 8px;\n  display: block;\n  background-color: #fff;\n  border: 2px solid blueviolet;\n  border-radius: 8px;\n`;\nexport const Input = styled(Field)`\n  margin-left: 8px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n`;\n","import { PageWrapper } from 'components/App/App.styled';\nimport { Contacts } from 'components/ContactsList/ContactsList';\nimport { FindContacts } from 'components/FindContacts/FindContacts';\nimport { FormPhoneBook } from 'components/Form/Form';\nimport { selectError, selectIsLoading } from 'components/redux/contactSlice';\nimport { useSelector } from 'react-redux';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  <PageWrapper>\n    <h1>Phonebook</h1>\n    <FormPhoneBook />\n    <h2>Contacts</h2>\n    {isLoading && !error && <div>Request in progress...</div>}\n    <FindContacts />\n    <Contacts />\n  </PageWrapper>;\n};\nexport default ContactsPage;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Button, Error, FormEl, Input, Label } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from 'notiflix';\nimport { addContacts } from 'components/redux/operations';\nimport { selectContacts } from 'components/redux/contactSlice';\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  number: Yup.string()\n    .min(7, 'Must be min 7 numbers!')\n    .max(15, 'Must be max 15 numbers!!')\n    .required('Required'),\n});\n\nexport const FormPhoneBook = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const onSubmit = ({ name, number }) => {\n    if (contacts.find(contact => contact.phone === number)) {\n      Notify.failure(`${number} is alredy in contacts`);\n      return;\n    }\n    const newContact = { name, phone: number };\n    dispatch(addContacts(newContact));\n  };\n  return (\n    <div>\n      <Formik\n        initialValues={{ name: '', number: '' }}\n        onSubmit={(values, actions) => {\n          onSubmit(values);\n          actions.resetForm();\n        }}\n        validationSchema={SignupSchema}\n      >\n        <FormEl>\n          <Label>\n            Name\n            <Input name=\"name\" type=\"text\" />\n            <Error name=\"name\" component=\"span\" />\n          </Label>\n          <Label>\n            Number\n            <Input name=\"number\" type=\"tel\" />\n            <Error name=\"number\" component=\"span\" />\n          </Label>\n\n          <Button type=\"submit\">add contact</Button>\n        </FormEl>\n      </Formik>\n    </div>\n  );\n};\n"],"names":["styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","ErrorMessage","Form","Field","_templateObject5","Yup","shape","name","min","max","required","number","useSelector","selectIsLoading","selectError"],"sourceRoot":""}